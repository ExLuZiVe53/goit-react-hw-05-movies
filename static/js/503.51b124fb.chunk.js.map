{"version":3,"file":"static/js/503.51b124fb.chunk.js","mappings":"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","sources":["components/Api/Api.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZjgyMWE2YmUzMjY1NGJkMjY3NjMzZjdjOWI5ZDlhMCIsInN1YiI6IjY1MjgwMzk1ZWE4NGM3MDBjYTBmNjIzYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k-n54P2F2h1RraKP3sH1dW3Slpezw0___sA28I-UCyY';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.common['accept'] = 'application/json';\n//   /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport async function fetchMovieTrendToday(abortCTRL) {\n  const response = await axios.get('trending/movie/day?language=en-US', {\n    signal: abortCTRL.signal,\n  });\n\n  return response.data;\n}\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\nexport async function fetchQueryMovie({ query, abortCTRL }) {\n  const response = await axios.get('search/movie', {\n    signal: abortCTRL.signal,\n    params: {\n      query: query,\n      language: 'en-US',\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n}\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\nexport async function fetchMovieInfoById({ id, abortCTRL }) {\n  const response = await axios.get(`movie/${id}}`, {\n    signal: abortCTRL.signal,\n    params: {\n      language: 'en-US',\n      include_adult: false,\n      append_to_response: 'credits, reviews',\n    },\n  });\n\n  return response.data;\n}\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\nexport async function fetchCastById({ id, abortCTRL }) {\n  const response = await axios.get(`movie/${id}/credits?language=en-US`, {\n    signal: abortCTRL.signal,\n  });\n  return response.data.cast;\n}\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nexport async function fetchReviewById({ id, abortCTRL }) {\n  const response = await axios.get(`movie/${id}/reviews?language=en-US`, {\n    signal: abortCTRL.signal,\n  });\n\n  return response.data.results;\n}\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst initialValues = { query: '' };\nconst SearchBox = ({ handleSubmit }) => {\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    handleSubmit(form.elements.query.value);\n    form.reset();\n  };\n\n  return (\n    <Formik initialValues={initialValues}>\n      <Form onSubmit={onSubmit} className=\"form\">\n        <Field\n          className=\"input\"\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\" className=\"button\">\n          Search video\n        </button>\n        <ErrorMessage name=\"searchImg\" component=\"div\" />\n      </Form>\n    </Formik>\n  );\n};\nexport default SearchBox;\n","import {\n  NavLink,\n  Outlet,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport SearchBox from '../components/SearchBox/SearchBox';\n\nimport { fetchQueryMovie } from '../components/Api/Api.js';\nimport { Suspense, useEffect, useState } from 'react';\n\nconst Movies = () => {\n  const [movieListQuery, setMovieListQuery] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    let abortCTRL = new AbortController();\n    const fetchData = async () => {\n      try {\n        // ініціалізація абортконтролера\n        if (abortCTRL.current) {\n          abortCTRL.current.abort();\n        }\n        abortCTRL = new AbortController();\n\n        const MovieListQuerys = await fetchQueryMovie({ query, abortCTRL });\n\n        setMovieListQuery([\n          ...MovieListQuerys,\n          // .map(({ title, id, poster_path }) => ({ title, id, poster_path }))\n        ]);\n        // const film = fetchMovieInfoById(movieInfo);\n      } catch {}\n    };\n    fetchData();\n    return () => {\n      abortCTRL.abort();\n    };\n  }, [query]);\n\n  const handleSubmit = input => {\n    if (query === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: input });\n  };\n\n  const location = useLocation();\n\n  return (\n    <div>\n      Movies\n      <SearchBox handleSubmit={handleSubmit} />\n      {movieListQuery && (\n        <ul>\n          {movieListQuery.map(film => (\n            <li key={film.id}>\n              <NavLink to={`${film.id}`} state={{ from: location }}>\n                {film.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["fetchMovieTrendToday","abortCTRL","axios","signal","response","data","fetchQueryMovie","query","params","language","include_adult","page","results","fetchMovieInfoById","id","append_to_response","fetchCastById","cast","fetchReviewById","initialValues","handleSubmit","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","className","name","type","autoComplete","autoFocus","placeholder","component","useState","movieListQuery","setMovieListQuery","useSearchParams","searchParams","setSearchParams","get","useEffect","AbortController","fetchData","current","abort","MovieListQuerys","location","useLocation","input","map","film","to","state","from","title","Suspense","fallback"],"sourceRoot":""}